services:
  postgres:
    image: postgres:16-alpine
    container_name: ecommerce-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-product_trial}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data
      SERVICE_TAGS: prod
      SERVICE_NAME: postgresdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  backend:
    container_name: ecommerce-backend
    build:
      context: ./back/ecommerce-backend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
      - ./back/ecommerce-backend/.env
    environment:
      - SPRING_PROFILES_ACTIVE=${ENV:-prod}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-product_trial}
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-postgres}
      - server.port=${SERVER_PORT:-8085}
    ports:
      - "${SERVER_PORT:-8085}:${SERVER_PORT:-8085}"
    networks:
      - ecommerce-network

  frontend:
    container_name: ecommerce-frontend
    build:
      context: ./front
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - ecommerce-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ecommerce-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@alten.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
